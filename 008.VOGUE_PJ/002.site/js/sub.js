/// 보그코리아 서브페이지 JS - sub.js ///

/* ((((( jQB 밖에 있기때문에, html읽기도 전에 불러오짐 ))))) */
/******************************************************** 
           
    "파라미터 받기/가공" 왜? ▶ 로드구역 "밖"에 할까?
    ▶ URL을 읽기때문이다.(요소를 클릭안하기 때문에)
        
********************************************************/

// 파라미터 받기 ▶ get방식으로 데이터 받기 
let pm = location.href;
/* 
    [ 코드 풀이 ]
      = location.href; ▶ 오른쪽에 적었으니 URL 읽어오고
      let pm ▶ 변수에 할당
    
      ※ location.href 을 이퀄 오른쪽에 쓰면, url을 읽어옴
*/


/*  [ 물음표로 넘어오는 파라미터 체크하기 ]  
      왜 체크하나? 없으면 에러나니까!!!
      ▷ sub.html 에서 alt+L+O 해서 들어가보면 
         http://172.17.38.209:5500/001.HTML%ED%95%99%EC%8A%B5/008.VOGUE_PJ/002.site/sub.html
         뒤에 아무것도 없어서 에러난다. 이 페이지로 들어가는 것을 방지하기 위해

      무엇으로 체크하나?
      ▶ indexOf(문자열) -> 없으면 -1

      왜 이걸 하냐?
      /sub.html?cat=runway 우리는 해당카테고리를 누르면 해당 이름이 주소창에 찍히게 했다.
      그래서 ? 부터 시작하는 cat=runway 이것들이 정상 나오게 하는 것임

      tip) 원래 indexOf(문자열)은 찾는 문자열 위치 순번을 리턴함! (문자열안에 찾는거 넣었는데 그게 없으면 -1값을 뱉는다.)
      참고자료 -> Get02.html
*/
if(pm.indexOf("?") === -1){ // 물음표없으면!

    alert("비정상적인 접근입니다!");
    location.href = "index.html";
    // 첫페이지로 돌려보낸다!

} /////// if ///////////////////


// [ 파라미터값 가공하기 ]
//   -> ?로 자르고 뒤에것, =로 자르고 뒤에것
pm = pm.split("?")[1].split("=")[1]
/*  
    [1]을 왜 썼을까? 
    ★ split으로 자르면 "배열" 에 담긴다! 그 중에 1을 선택한것임 

    ▶ 콘솔로 찍어서보면
       ['cat', 'runway']
       0: "cat"
       1: "runway"
       length: 2

       이렇게 찍히는 것을 볼 수 있다.
       우리는 cat까지가 필요한 것이 아닌
       각각의 카테고리 해당이름이 필요한것이니
    ▶ 1번을 선택할 것. 
    
    ▷ 참고자료 JS007.html -> split [ 문자 자르기 함수 ] 보면된다.
*/
/* 
    http://172.17.38.209:5500/001.HTML%ED%95%99%EC%8A%B5/008.VOGUE_PJ/002.site/sub.html?cat=runway
    이 주소값이 원래는 출력되는데
    파리미터값을 가공해서
    runway 이런식으로 각 카테고리 해당 글자만 콘솔에 찍히는 것을 볼 수 있다.
*/

console.log(pm);


///// 각 서브별 데이터 셋팅하기 (function안에 넣지 않은, 전역변수로 사용함)
//// (전역변수로 막끌어다가 쓰려고, function안에다가 넣으면 지역변수가 되서, 굳이 그렇게 할 필요가 없어서 전역변수로 사용함) /////
let sinfo = { /* 객체데이터 */
    "fashion": { // 객체값 또 들어가있음 /* 구조화(체계) 데이터바인딩 : 뷰제이에스/앵귤러제이에스/앵귤러 에서 바꿔치기 */ 
        "제목": "Fashion",
        "메뉴": ["전체", "트렌드", "아이템", "피플", "화보"], // 배열
        "경로": "fashion", /* 내 폴더명이 바뀌면, 여기만 바꿔주면됨. */
        "타이틀": [ // 배열
            "&lt;고양이를 부탁해&gt;의 20주년 기획전",
            "패션계에서 가장 주목받는 신인 디자이너, 자크무스",
            "서울국제여성영화제 장편 경쟁 한국 영화 4편",
            "드라마 &lt;알고 있지만&gt;의 나비가 유행이라고?",
            "홍콩 누아르 영화 주인공으로 변신한 민주",
            "MSG워너비여, 영원하라!"
        ]
    },
    "beauty": {
        "제목": "Beauty",
        "메뉴": ["전체", "트렌드", "아이템", "헬스", "피플"],
        "경로": "beauty",
        "타이틀": [
            "매실의 놀라운 효능",
            "맥시멀 뷰티의 신세계",
            "브라렛보다 니플 패치?",
            "지금 고쳐야 할 샤워 습관 6",
            "‘급찐살’ 저격! 셀럽들의 비건 식단",
            "팝한 여름 헤어 액세서리 활용법"
        ]
    },
    "living": {
        "제목": "Living",
        "메뉴": ["전체", "여행", "음식", "문화", "인테리어", "키즈", "테크"],
        "경로": "living",
        "타이틀": [
            "파리에 도버 스트리트 ‘리틀’ 마켓이 오픈했다",
            "전망 좋은 홈 오피스",
            "랜선 눈꽃 여행",
            "2021년 새 계절을 위한 새것 모음",
            "눈 호강 제대로, 뉴 호텔 5",
            "고요한 겨울, 호캉스"
        ]
    },
    "people": {
        "제목": "People",
        "메뉴": "없음", 
        "경로": "people",
        "타이틀": [
            "아르마니의 시간, 아르마니의 약속",
            "슈퍼모델 나오미 캠벨의 그림 같은 빌라",
            "가구와 오브제를 창조하는 젊은 디자이너 6인",
            "지지와 벨라의 엄마, 욜란다가 말하는 ‘라임병’",
            "성별 고정관념을 깨는 파격 캐스팅",
            "멋쟁이 엄마를 소개합니다"
        ]
    },
    "video": {
        "제목": "Video",
        "메뉴": "없음",
        "경로": "video",
        "타이틀": [
            "발렌시아가의 50th 꾸뛰르 컬렉션 라이브 스트리밍",
            "뉴욕 패션 위크에 소개된 한국 디자이너 브랜드",
            "에디터 제니가 선택한 주얼리는?",
            "디올 FALL-WINTER 2021-2022 레디 투 웨어 컬렉션 라이브 스트리밍",
            "프라다 2021 F/W 시즌 여성복 컬렉션 라이브 스트리밍",
            "발렌시아가 SUMMER 21 (PRE-COLLECTION)"
        ]
    },
    "runway": {
        "제목": "Runway",
        "메뉴": "없음",
        "경로": "runway",
        "타이틀": [
            "<small>Ready To Wear 2021 F/W</small><br>Rick Owens",
            "<small>Ready To Wear 2021 F/W</small><br>We11done",
            "<small>Ready To Wear 2021 F/W</small><br>Comme des Garçons",
            "<small>Ready To Wear 2021 F/W</small><br>Chloé",
            "<small>Ready To Wear 2021 F/W</small><br>Balmain",
            "<small>Ready To Wear 2021 F/W</small><br>Loewe"
        ]
    },
    "shopping": {
        "제목": "Shopping",
        "메뉴": ["전체", "패션", "뷰티", "리빙"],
        "경로": "shopping",
        "타이틀": [
            "여름과 찰떡궁합! 세라믹 바구니",
            "사용할수록 매력적인 테크 제품",
            "취향 있는 플랜터",
            "감사의 마음을 담은, 부모님을 위한 선물",
            "성년을 위한 선물",
            "작고 소중한 아이들을 위한 선물"
        ]
    }
}; ////////// sinfo ////////////////


////////////////////////////// 제이쿼리 로드구역 ///////////////////////////////////////////////
$(function(){ ////////////// jQB (제이쿼리 코드블록) ///////////////////////////////////////////

    // 1. 데이터 선택하기 ****************************************************************************************
    //    방법 : Get방식으로 받은 파라미터값 pm변수를 이용하여(pm변수는 지금 해당 카테고리명대로 나오니까)
    //           셋팅된 서브메뉴 데이터 객체인 sinfo속성 중 해당 이름의 
    //           속성을 선택하여 값을 셋팅한다.
    //           ★ 그 해당이름을 pm변수에 담겨있다! 
    //           sinfo["fashion"] -> 이렇게 담겨있는건데, 이렇게 일일히 적을거 아니니까,
    //           pm변수가 각각의 이름이라서 변수라서 따옴표 없이 담은것임
    let data = sinfo[pm];
    // console.log(data);


    // 2. 데이터 셋팅하기 ****************************************************************************************
    //    원리 : 가져온 데이터에서 속성명으로 각 파트에 맞는 값을 셋팅한다!

    

    // 2-0. 상단 탭타이틀 변경하기 -> <head> 영역에 <title>Fashion | 보그 코리아 (Vogue Korea)</title> 말하는거임
    $("title").text(data["제목"]+" | 보그 코리아 (Vogue Korea)");



    // 2-1. 제목넣기 /////////////////////////////////////////////////////////////////////////////////////////////
    //      대상 : .stit
    let stit = $(".stit");
    stit.text(data["제목"]); /* 객체에서 제목을 가져와라 */
    /* 
        data["제목"] -> 코드풀이

        여기서 data는 뭐지?
        let sinfo = "fashion": { ///제목/메뉴/경로/타이틀/// } 이거다.
        "fashion" 뿐 아니라 각각의 항목의 저 안의 항목을 지칭함("beauty", "living" ...)

        ▶ { ///제목/메뉴/경로/타이틀/// } 이게 data다.
            이게 무슨 형식임? ▶ 객체
        ▶▶ 객체 형식으로 부른거임
        ▶▶ data["제목"]
    */
    /* 빠락하고 잔상이 보이는건 "sub.html" <h2 class="stit">Fashion</h2> 적혀있어서 그러니
       Fashion 기존 텍스트 지우면 됨. */


    // 제목 예외 : runway
    if(pm === "runway"){
        stit.css({
            // 배경넣기
            background: "url(images/bg_02.jpg) no-repeat center/cover",
            color:"#fff"
        }); //// css //////

    } /////// if /////////

    // 2-2. 서브메뉴(LNB) 넣기 /////////////////////////////////////////////////////////////////////////////////////
    //      메뉴 데이터 넣기
    let lnb = data["메뉴"];
    console.log(lnb);

    // 메뉴값이 "없음"이 아닐때만 셋팅하기
    if(lnb !== "없음"){

        // 메뉴는 ul밑에 li 구조로 되어있다.
        // 이것을 html로 구성하여 넣어준다! (그래서 sub.html에 2.메인영역에 ul,li다 주석처리함 : 왜? 자동적으로 하위 카테고리 메뉴 뿌리게 하려고)
        let mhtml = "<ul>";
        
        // 메뉴 "배열"값 만큼 돌기 -> for of문!(배열이니까)
        for(let x of lnb){ // x는 각각의 배열값!
            mhtml += '<li><a href="#">'+ x +'</a></li>';
        } /////// for of ////////////
        mhtml += "</ul>";
        // console.log(mhtml);

        // LNB 메뉴 박스요소에 html 메뉴 코드넣기!
        $(".lnb").html(mhtml);
        // html(코드) -> 제이쿼리 메서드


    } ///// if ///////////////

    // 2-3. 컨텐츠박스 배경이미지 넣기 ////////////////////////////////////////////////////////////////////////////////
    //      미리 셋팅된 클래스를 .cont박스에 적용하여
    //      하위 .cbx의 배경이미지가 변경되게 한다!

    // 클래스 넣을 대상 : .cont
    $(".cont").addClass(data["경로"]);
    /* 
        data["경로"] 는 이미지 분류 경로 이름이다!
        이 이름으로 클래스를 부모요소에 준다. (sub.css 에 해당 이미지 넣는다.)
    */

 
    // 2-4. 컨텐츠 박스의 h2태그에 타이틀 넣기 /////////////////////////////////////////////////////////////////////////
    //      대상 : .cbx h2
    //      사용할 메서드 : each(function(idx,ele){구현코드})
    //                     -> idx는 순번(0부터), ele는 요소자신(this와 동일)
    $(".cbx h2").each(function(idx,ele){
        // console.log(idx);

        // 타이틀 넣기
        $(ele).html(data["타이틀"][idx]);
        // data["타이틀"][순번] -> 해당순번의 타이틀 배열값! 
        // idx가 있기때문에 0,1,2,3.... 계속 순번대로 들어가는 것임 (그래서 "타이틀"내용이 순서대로 보임)



    }); /////////////////// each /////////////////////







}); ///////////////////// jQB ////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////